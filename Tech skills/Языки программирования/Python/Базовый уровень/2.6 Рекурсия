Рекурсия - вызов функцией самой себя.
Задача - «уплотнить» все подсписки независимо от того, насколько глубоко они вложены. Для этого подойдет функция-генератор:
```
def flatten(lol):
  for item in lol:
    if isinstance(item, list):
      for subitem in flatten(item):
        yield subitem
    else:
      yield item

lol = [1, 2, [3,4,5], [6,[7,8,9], []]]
flatten(lol)
<generator object flatten at 0x10509a750>
list(flatten(lol))
[1, 2, 3, 4, 5, 6, 7, 8, 9]
```

Начиная с Python 3.3 появилось выражение yield from, которое позволяет генератору передавать часть работы другому генератору. Можно использовать его для того, чтобы упростить функцию flatten():
```
def flatten(lol):
  for item in lol:
    if isinstance(item, list):
      yield from flatten(item)
  else:
    yield item

lol = [1, 2, [3,4,5], [6,[7,8,9], []]]
list(flatten(lol))
[1, 2, 3, 4, 5, 6, 7, 8, 9]
```
